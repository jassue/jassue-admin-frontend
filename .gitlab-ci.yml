image: node:12.14.1-buster-slim

variables:
  VERSION: $CI_COMMIT_SHORT_SHA
  DOCKER_IMAGE: $CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA

stages:
  - build
  - test
  - dockerize
  - deploy

before_script:
  - if [[ $CI_COMMIT_BRANCH == "master" ]] ; then
      VERSION=latest;
    fi
  - if [[ $CI_COMMIT_BRANCH =~ ^feature- ]] ; then
      VERSION=$CI_COMMIT_BRANCH;
    fi
  - if [ ! -z "$CI_COMMIT_TAG" ] ; then
      VERSION=$CI_COMMIT_TAG;
    fi
  - DOCKER_IMAGE=$CI_PROJECT_NAME:$VERSION
  - echo $VERSION

npm:
  stage: build
  cache:
    key:
      files:
        - package.json
        - yarn.lock
    paths:
      - node_modules
  script:
    - npm config set registry https://registry.npm.taobao.org/
    - npm config set sass_binary_site https://npm.taobao.org/mirrors/node-sass/
    - if [ ! -x "node_modules" ] ; then
        echo 'node_modules not exists';
        npm install;
      else
        echo 'node_modules exists';
      fi
    - export PUBLIC_PATH=/admin
    - export VUE_APP_BASE_API=/api/admin
    - export VUE_APP_NAME=$APP_NAME
    - npm run build
  artifacts:
    expire_in: 7 day
    paths:
      - dist/

code-style:
  stage: test
  cache:
    key:
      files:
        - package.json
        - yarn.lock
    paths:
      - node_modules
    policy: pull
  script:
    - npm run lint
  except:
    - master
    - tags

.build_and_deploy:
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual
    - if: '$CI_COMMIT_BRANCH =~ /-stable$/'
      when: always
    - if: '$CI_COMMIT_BRANCH =~ /^feature-/'
      when: manual

build-image:
  extends: .build_and_deploy
  image: docker:20.10.14
  stage: dockerize
  dependencies:
    - npm
  script:
    - ls -la
    - echo $VERSION > ./dist/VERSION
    - docker build -t $DOCKER_IMAGE .
    - build/push.sh -r $DOCKER_REGISTRY -n $DOCKER_REGISTRY_NAMESPACE -i $DOCKER_IMAGE -u $DOCKER_USER -p $DOCKER_PASS

deploy-dev:
  extends: .build_and_deploy
  stage: deploy
  image: ansible/centos7-ansible
  script:
    - mkdir ~/.ssh/
    - echo -e "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - export ANSIBLE_HOST_KEY_CHECKING=False
    - echo -e "${ANSIBLE_HOSTS}" > ~/hosts
    - echo -e "${ANSIBLE_PLAYBOOK}" > ~/playbook.yml
    - echo -e "${DEV_NGINX_PROXY}" > nginx-proxy.conf
    - ansible-playbook ~/playbook.yml -i ~/hosts --extra-vars "server_name=dev_server docker_image=$FULL_DOCKER_IMAGE version=$VERSION"
